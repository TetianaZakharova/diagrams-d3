{"version":3,"file":"static/js/703.613136bb.chunk.js","mappings":"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","sources":["diagrams/lineChart/LineChart.js","webpack://diagrams-d3/./src/diagrams/lineChart/CustomChart.scss?8c26"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { line, select, selectAll, scaleOrdinal, timeParse, scaleTime, extent, timeDay, axisBottom, scaleLinear, axisLeft} from \"d3\"\r\nimport \"./CustomChart.scss\";\r\n\r\n// Set the dimensions and margins of the diagram\r\nconst margin = { top: 50, right: 50, bottom: 60, left: 75 },\r\n  width = 1000 - margin.left - margin.right,\r\n  height = 500 - margin.top - margin.bottom;\r\n\r\n  const LineChart = ({ sourceData }) => {\r\n\r\n  const [data, setData] = useState([])\r\n  const [timeData, setTimeData] = useState([])\r\n  const [yValue, setYValue] = useState([])\r\n  let lineRef = useRef();\r\n\r\n  useEffect(() => {\r\n    setData(sourceData[0]?.scatterData);\r\n    setTimeData(sourceData[0]?.xDomain);\r\n    setYValue(sourceData[0]?.yDomain);\r\n  },  \r\n  [sourceData]) \r\n\r\n  // function to parse the time\r\n  const parseDate = timeParse(\"%Y-%m-%d\");\r\n  const allGroup = [\"Download\", \"Upload\"];\r\n  var colors = [\"#86bc25\", \"#bbb\"];\r\n\r\n  useEffect(() => {\r\n    select(\"#connectedScatter\").selectAll(\"svg\").remove()\r\n\r\n    var svg = select(\"#connectedScatter\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .call(responsivefy)\r\n      .append(\"g\")\r\n      .attr(\"transform\",\r\n        \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    // A color scale: one color for each group\r\n    var myColor = scaleOrdinal()\r\n      .domain(allGroup)\r\n      .range(colors);\r\n    // .range(d3.schemeCategory10);\r\n\r\n    // Add X axis --> it is a date format\r\n    var x = scaleTime()\r\n      //d3.scaleLinear()\r\n      // .domain([0,10])\r\n      // .domain(vm.x)\r\n      .domain(extent(timeData, function (d) { return parseDate(d.time); }))\r\n      .range([0, width]);\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(axisBottom(x).ticks(timeDay));\r\n\r\n    // text label for the x axis\r\n    svg.append(\"text\")\r\n      .attr(\"transform\",\r\n        \"translate(\" + (width / 2) + \" ,\" +\r\n        (height + margin.top - 10) + \")\")\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"Day\");\r\n\r\n    // Add Y axis\r\n    var y = scaleLinear()\r\n      // .domain( [0,100])\r\n      .domain(yValue)\r\n      .range([height, 0]);\r\n    svg.append(\"g\")\r\n      .call(axisLeft(y));\r\n\r\n    // text label for the y axis\r\n    svg.append(\"text\")\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .attr(\"y\", 0 - margin.left)\r\n      .attr(\"x\", 0 - (height / 2))\r\n      .attr(\"dy\", \"1em\")\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"MB\");\r\n\r\n    // Add the lines\r\n    let line2 = line()\r\n      .x(function (d) { return x(+parseDate(d.time)) })\r\n      .y(function (d) { return y(+d.value) })\r\n    svg.selectAll(\"myLines\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"d\", function (d) { return line2(d?.values) })\r\n      .attr(\"stroke\", function (d) { return myColor(d?.name) })\r\n      .style(\"stroke-width\", 4)\r\n      .style(\"fill\", \"none\")\r\n\r\n          // Add the points\r\n    svg\r\n    // First we need to enter in a group\r\n        .selectAll(\"myDots\")\r\n        .data(data)\r\n        .enter()\r\n        .append('g')\r\n        .style(\"fill\", function(d){ return myColor(d.name) })\r\n        // Second we need to enter in the 'values' part of this group\r\n        .selectAll(\"myPoints\")\r\n        .data(function(d){ return d.values })\r\n        .enter()\r\n        .append(\"circle\")\r\n        .attr(\"cx\", function(d) { return x(parseDate(d.time)) } )\r\n        .attr(\"cy\", function(d) { return y(d.value) } )\r\n        .attr(\"r\", 5)\r\n        .attr(\"stroke\", \"white\")\r\n\r\n            // Add a legend \r\n    svg\r\n    .selectAll(\"myLegend\")\r\n    .data(data)\r\n    .enter()\r\n    .append('g')\r\n    .append(\"text\")\r\n    .attr('x', function(d,i){ return 15 + i*80})\r\n    .attr('y', 10)\r\n    .text(function(d) { return d.name; })\r\n    .style(\"fill\", function(d){ return myColor(d.name) })\r\n    .style(\"font-size\", 15)\r\n\r\n\r\n    function responsivefy(svg) {\r\n      // get container + svg aspect ratio\r\n      var container = select(svg.node().parentNode),\r\n        width = parseInt(svg.style(\"width\")),\r\n        height = parseInt(svg.style(\"height\")),\r\n        aspect = width / height;\r\n\r\n      // add viewBox and preserveAspectRatio properties,\r\n      // and call resize so that svg resizes on inital page load\r\n      // svg.attr(\"viewBox\", \"0 0 \" + 490 + \" \" + 500)\r\n      svg.attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\r\n        .attr(\"perserveAspectRatio\", \"xMinYMid\")\r\n        .call(resize);\r\n\r\n\r\n      select(window).on(\"resize.\" + container.attr(\"id\"), resize);\r\n\r\n      // get width of container and resize svg to fit it\r\n      function resize() {\r\n        var targetWidth = parseInt(container.style(\"width\"));\r\n        svg.attr(\"width\", targetWidth);\r\n        svg.attr(\"height\", Math.round(targetWidth / aspect));\r\n      }\r\n    } \r\n}, [data?.length > 0, timeData?.length > 0, yValue?.length > 0, data, timeData, yValue]) \r\n\r\n  return (\r\n    <>\r\n      {\r\n        <div className='col-lg-12 d-flex flex-column' >\r\n          <div\r\n            id='connectedScatter'\r\n            className='col-lg-12 d-flex mx-auto'\r\n            ref={lineRef}\r\n          >\r\n          </div>\r\n        </div>\r\n\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LineChart ","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["margin","width","height","_ref","sourceData","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","timeData","setTimeData","_useState5","_useState6","yValue","setYValue","lineRef","useRef","useEffect","_sourceData$","_sourceData$2","_sourceData$3","scatterData","xDomain","yDomain","parseDate","timeParse","allGroup","colors","select","selectAll","remove","svg","append","attr","call","container","node","parentNode","parseInt","style","aspect","resize","targetWidth","Math","round","window","on","myColor","scaleOrdinal","domain","range","x","scaleTime","extent","d","time","axisBottom","ticks","timeDay","text","y","scaleLinear","axisLeft","line2","line","value","enter","values","name","i","length","_jsx","_Fragment","children","className","id","ref"],"sourceRoot":""}